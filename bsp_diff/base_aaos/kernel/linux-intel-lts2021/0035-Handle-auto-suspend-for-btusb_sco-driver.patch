From 40ae18fc67122d2863d86ad942f6873683bda84e Mon Sep 17 00:00:00 2001
From: Gowtham Anandha Babu <gowtham.anandha.babu@intel.com>
Date: Tue, 2 Apr 2024 20:45:17 +0530
Subject: [PATCH] Handle auto-suspend for btusb_sco driver

Tracked-On: OAM-116918
Signed-off-by: Gowtham Anandha Babu <gowtham.anandha.babu@intel.com>
---
 sound/usb/btusb/btusb_sco_snd_card.c | 20 +++++++++++++-------
 1 file changed, 13 insertions(+), 7 deletions(-)

diff --git a/sound/usb/btusb/btusb_sco_snd_card.c b/sound/usb/btusb/btusb_sco_snd_card.c
index 2034695c9086..287448f05ab2 100644
--- a/sound/usb/btusb/btusb_sco_snd_card.c
+++ b/sound/usb/btusb/btusb_sco_snd_card.c
@@ -382,7 +382,7 @@ static void btusb_isoc_rx_complete(struct urb *urb)
 	int i;
 
 	if (!test_bit(BTUSB_ISOC_RX_START, &data->flags)) {
-		dev_dbg(dev, "%s BTUSB_ISOC_RX_START not set\n", __func__);
+		dev_err(dev, "%s BTUSB_ISOC_RX_START not set\n", __func__);
 		return;
 	}
 
@@ -997,15 +997,22 @@ static void btusb_sco_disconnect(struct usb_interface *intf)
 static int btusb_sco_suspend(struct usb_interface *intf, pm_message_t message)
 {
 	// TODO: Do we need to call snd_pcm_suspend_all
-	// snd_pcm_suspend_all(data->pcm);
+        struct btusb_data *data = usb_get_intfdata(intf);
+        struct device *dev;
+        dev = &(data->udev->dev);
+        dev_err(dev, "%s: 1", __func__);
+	snd_pcm_suspend_all(data->pcm);
 	return 0;
 }
 
 static int btusb_sco_resume(struct usb_interface *intf)
 {
 	// TODO: Do we need to call snd_power_change_state
-	// snd_power_change_state(data->card, SNDRV_CTL_POWER_D0);
-
+        struct btusb_data *data = usb_get_intfdata(intf);
+        struct device *dev;
+        dev = &(data->udev->dev);
+        dev_err(dev, "%s: 1", __func__);
+	snd_power_change_state(data->card, SNDRV_CTL_POWER_D0);
 	return 0;
 
  }
@@ -1023,7 +1030,7 @@ static int btusb_sco_ioctl(struct usb_interface *intf, unsigned int code,
 
 	if (code == USBDEVFS_IOCTL) {
 		memcpy(handle, (uint8_t *)buf, SCO_HANDLE_SIZE);
-		dev_dbg(dev, "value of handle = %x, %x", handle[0], handle[1]);
+		dev_err(dev, "value of handle = %x, %x", handle[0], handle[1]);
 		err = 0;
 	} else {
 		dev_err(dev, "%s:Invalid Ioctl code", __func__);
@@ -1040,8 +1047,7 @@ static struct usb_driver btusb_sco_driver = {
 	.suspend	= btusb_sco_suspend,
 	.resume		= btusb_sco_resume,
 	.id_table	= btusb_sco_table,
-	.supports_autosuspend = 0
-
+	.supports_autosuspend = 1
 };
 
 module_usb_driver(btusb_sco_driver);
-- 
2.17.1

